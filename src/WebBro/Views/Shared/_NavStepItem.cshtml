@model NavItemVm

@{
    // üîß –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∫–æ–Ω–∫–∏ –∏ URL
    string navIcon = Model.IsCompleted ? "‚úîÔ∏è"
    : Model.IsOpen ? "‚û°Ô∏è"
    : "üîí";

    string url = Url.Action(Model.StageKey, Model.Type, new
    {
        learningPathId = Model.LearningPathId,
        stepId = Model.StepId
    });
}

@if (!Model.HasChildren)
{
    <!-- üìÑ –û–±—ã—á–Ω—ã–π —à–∞–≥ -->
    <li class="menu__item @(Model.IsCurrentPage ? "menu__item_current" : "")">
        <span>@navIcon</span>
        <a href="@url" class="menu__link">@Model.Title</a>
    </li>
}
else
{
    <!-- üìÇ –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —à–∞–≥ —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º–∏ -->
    <li class="menu__item">
        <details class="dropdown" @(Model.IsCurrentPage ? "open" : "")>
            <summary class="dropdown__summary">
                <span>@navIcon</span>
                @Model.Title
                <span>&#x2BC6;</span> <!-- üîΩ –°—Ç—Ä–µ–ª–æ—á–∫–∞ -->
            </summary>
            <ul class="dropdown__list">
                @foreach (var child in Model.Children)
                {
                    string childIcon = child.IsCompleted ? "‚úîÔ∏è"
                    : child.IsOpen ? "‚û°Ô∏è"
                    : "üîí";

                    string childUrl = Url.Action(child.StageKey, child.Type, new
                    {
                        learningPathId = child.LearningPathId,
                        stepId = child.StepId
                    });

                    <!-- üìë –í–ª–æ–∂–µ–Ω–Ω—ã–π —à–∞–≥ -->
                    <li class="menu__item dropdown__item @(child.IsCurrentPage ? "menu__item_current" : "")">
                        <span>@childIcon</span>
                        <a href="@childUrl" class="dropdown__link">@child.Title</a>
                    </li>
                }
            </ul>
        </details>
    </li>
}
